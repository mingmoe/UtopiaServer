//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// The build.gradle is a part of project utopia, under MIT License.
// See https://opensource.org/licenses/MIT for license information.
// Copyright (c) 2021 moe-org All rights reserved.
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
import java.nio.charset.Charset
import java.nio.file.CopyOption
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption
import java.nio.file.StandardOpenOption


// 插件设置
plugins {
    // java 程序
    id 'java-library'

    // 打包jar
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

// 依赖
dependencies {
    // 引入libgdx
    api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

    // 依赖core
    api project(":core")
}

// 配置启动类
jar {
    manifest.attributes.put("Main-Class","moe.kawayi.org.utopia.desktop.main.DesktopLauncher")

    finalizedBy shadowJar
}


// 依赖任务
// 创建版本号文件
task createProperties {
    java.nio.file.Path path = Paths.get("$buildDir/resources/main")

    if (!Files.exists(path)) {
        Files.createDirectories(path)
    }

    path = Paths.get("$buildDir/resources/main/utopia-version.properties")

    if(!Files.exists(path)) {
        Files.createFile(path)
    }

    Files.writeString(
            path,
            "UtopiaVersion=".concat(rootProject.version.toString()).concat("\n"),
            Charset.forName("UTF-8"),
            StandardOpenOption.WRITE,
            StandardOpenOption.TRUNCATE_EXISTING)
}

classes {
    finalizedBy createProperties
}

// 打包
shadowJar {
    archiveClassifier.set("release")

    destinationDirectory.set(new File("${desktopReleaseDir}"))
}

static void releaseFile(String origin, String des){
    Paths.get(des).toFile().mkdirs()

    Files.copy(Paths.get(origin),Paths.get(des), StandardCopyOption.REPLACE_EXISTING)
}

// 发布
tasks.register("release"){
    description "package and copy assets"
    dependsOn ":desktop:shadowJar"
    dependsOn rootProject.tasks.named("allJavaSourceJar")
    dependsOn rootProject.tasks.named("allJavadocJar")

    // ===========
    // copy source
    // ===========
    // copy icon
    releaseFile("${rootDir.toString()}/icon/Utopia(32x32).png","${desktopReleaseDir}/Utopia(32x32).png")
    releaseFile("${rootDir.toString()}/icon/Utopia(128x128).png","${desktopReleaseDir}/Utopia(128x128).png")

    // copy font
    releaseFile("${rootDir.toString()}/assets/fonts/unifont.ttf","${desktopReleaseDir}/assets/fonts/unifont.ttf")
}
