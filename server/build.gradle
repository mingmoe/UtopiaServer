import java.nio.charset.Charset
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// The build.gradle is a part of project utopia, under MIT License.
// See https://opensource.org/licenses/MIT for license information.
// Copyright (c) 2021 moe-org All rights reserved.
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

plugins {
    // java 库
    id 'java-library'

    // 检查源文件格式
    id 'checkstyle'

    // 静态代码分析
    id "com.github.spotbugs" version "5.0.0-beta.1"

    // 代码覆盖率报告
    id 'jacoco'

    // 打包jar
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}


dependencies {
    // 日志库
    api "org.apache.logging.log4j:log4j-api:$log4j2Version"
    api "org.apache.logging.log4j:log4j-core:$log4j2Version"

    // jackson
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    // netty
    api "io.netty:netty-all:$nettyVersion"

    // spotbugs版本
    spotbugs "com.github.spotbugs:spotbugs:$spotbugsVersion"

    // 测试框架
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"

    // core
    api project(":core")
}

// 设置checkstyle
checkstyle {
    ignoreFailures = false

    // 定义一些变量
    // 小驼峰和大驼峰的命名设置
    configProperties.put("utopia.checkstyle.small_hump","[a-z]+[A-Za-z0-9]*")
    configProperties.put("utopia.checkstyle.large_hump","[A-Z]+[A-Za-z0-9]*")
    configProperties.put("utopia.checkstyle.always_large","[A-Z]+[A-Z0-9_]*")
}

test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport // 在test完成之后调用jacoco
}

jacocoTestReport {
    dependsOn test // 调用jacoco之前进行测试

    reports {
        // 设置输出
        xml.required = true
        html.required = true
    }
}


// 设置java编译选项
compileJava {
    options.encoding("UTF-8")
    options.setEncoding("UTF-8")
    options.forkOptions.jvmArgs << '-Dfile.encoding=UTF-8' << '-Duser.language=es'
}

// 代码分析器spotbugs设置
spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    maxHeapSize = '1g'
    jvmArgs = [ '-Dfile.encoding=UTF-8' ]
}

// 配置启动类
jar {
    manifest {
        attributes 'Main-Class': 'moe.kawayi.org.utopia.server.main.Main'
    }

    finalizedBy shadowJar
}

// 依赖任务
// 创建版本号文件
task createProperties {
    java.nio.file.Path path = Paths.get("$buildDir/resources/main");

    if (!Files.exists(path)) {
        Files.createDirectories(path)
    }

    path = Paths.get("$buildDir/resources/main/utopia-version.properties");

    if(!Files.exists(path)) {
        Files.createFile(path);
    }

    Files.writeString(
            path,
            "UtopiaVersion=".concat(rootProject.version.toString()).concat("\n"),Charset.forName("UTF-8"),
            StandardOpenOption.WRITE,
            StandardOpenOption.TRUNCATE_EXISTING);
}

classes {
    finalizedBy createProperties
}

shadowJar {
    archiveClassifier.set("release")

    destinationDirectory.set(new File("${rootDir.toString()}/output-package/server/"))
}

// 发布
tasks.register("release"){
    description "package and copy assets"
    dependsOn shadowJar

}
